 

package org.mababio.spring.spring.boot.test.traditional;



import org.junit.Test;
import org.junit.runner.RunWith;
import org.mababio.spring.domain.Problem;
import org.mababio.spring.domain.Solution;
import org.mababio.spring.domain.Tag;
import org.mababio.spring.inter.PersistService;
import org.mababio.spring.main.WebAppMain;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.IntegrationTest;
import org.springframework.boot.test.SpringApplicationConfiguration;
import org.springframework.boot.test.TestRestTemplate;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;

import com.vaadin.annotations.AutoGenerated;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/**
 * Basic integration tests for demo application.
 * 
 * @author Dave Syer
 */
@RunWith(SpringJUnit4ClassRunner.class)
@SpringApplicationConfiguration(classes = WebAppMain.class)
@WebAppConfiguration
@IntegrationTest("server.port:0")
@DirtiesContext
public class SampleTraditionalApplicationTests {

	
	@Autowired
	PersistService service;
	
	@Value("${local.server.port}")
	private int port;
	
	
	
	
	
	
	
	@Test
	public  void PersistProblemTest(){
		
		
		
		Problem problem = new Problem();
		problem.setContent("Test: Problem Tag");
		
		
	/*	Solution solution = new Solution();
		solution.setContent("Test: Solution one");*/
		
		Tag tag = new Tag();
		tag.setContent(" Test Tag four");
		
		/*service.merger(problem, solution);*/
		service.merger(problem, tag);
		
		service.persistP(problem);
		
		//service.persistS(solution);
		//service.persistT(tag);
		
		
		
		
		
		
		
	}
	
	
	
	

	/*@Test
	public void testHomeJsp() throws Exception {
		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(
				"http://localhost:" + this.port, String.class);
		assertEquals(HttpStatus.OK, entity.getStatusCode());
		String body = entity.getBody();
		assertTrue("Wrong body:\n" + body, body.contains("<html>"));
		assertTrue("Wrong body:\n" + body, body.contains("<h1>Home</h1>"));
	}

	@Test
	public void testStaticPage() throws Exception {
		ResponseEntity<String> entity = new TestRestTemplate().getForEntity(
				"http://localhost:" + this.port + "/index.html", String.class);
		assertEquals(HttpStatus.OK, entity.getStatusCode());
		String body = entity.getBody();
		assertTrue("Wrong body:\n" + body, body.contains("<html>"));
		assertTrue("Wrong body:\n" + body, body.contains("<h1>Hello</h1>"));
	}
*/
}
